.
.TH CCC "1" "March 2024" "ccc" "User Commands"
.SH NAME
ccc \- Fast, small, hackable TUI file manager with no dependency
.SH SYNOPSIS
.B ccc
.SH DESCRIPTION
Soft fork of fff in C aiming for size and speed with no dependency, hackable with patches and configurable
.PP
.SH "Usage"
.
.nf

h/left/backspace: go to parent dir
j/down: scroll down
k/up: scroll up
l/right/enter: go to child dir

o: open file with
O: open file with a GUI program detached from file manager

g: go to top
G: go to bottom

ctrl+u: jump up
ctrl+d: jump down

t: go to trash dir
~: go to home dir
-: go to previous dir
z: refresh current dir
:: go to a directory by typing

.: toggle hidden files
A: show directory disk usage/block size
i: toggle file details
u: sort files
x: view file/dir attributes
e: show history
y: copy filename to clipboard
!: open shell in current dir

f: new file
n: new dir
r: rename
X: toggle executable

space: mark file
a: mark all files in directory
d: trash

[1-9]: favourites/bookmarks (see customizing)

?: show help
q: exit with last dir written to file
ctrl+c exit without writing last dir
.
.fi
.
.SH "Customization"
.
.nf

Various settings can be changed in config.h file located in the program's directory.

.
.fi
.
.SH "CD on Exit for POSIX Shell"
.
.nf

# Add this to your .bashrc, .zshrc or equivalent.
# Run 'ccc' with 'c' or whatever you decide to name the function.
c() {
    ccc "$@"
    cd "$(cat "${XDG_CACHE_HOME:=${HOME}/.cache}/ccc/.ccc_d")"
}

.
.fi
.
.SH "Environment variables"
.
.nf

export CCC_LAST_D=~/.cache/ccc/.ccc_d
export CCC_FAV1=~/projects
export CCC_FAV2=~/.bashrc
export CCC_FAV3=~/Pictures/Wallpapers/
export CCC_FAV4=/usr/share
export CCC_FAV5=/
export CCC_FAV6=
export CCC_FAV7=
export CCC_FAV8=
export CCC_FAV9=

.
.fi
